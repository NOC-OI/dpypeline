:py:mod:`etl_pipeline.etl_pipeline`
===================================

.. py:module:: etl_pipeline.etl_pipeline

.. autoapi-nested-parse::

   ETL pipeline definitions.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   etl_pipeline.etl_pipeline.Task
   etl_pipeline.etl_pipeline.Job
   etl_pipeline.etl_pipeline.ETLPipeline




.. py:class:: Task

   Task class.

   :ivar function: Task function.
   :ivar args: Arguments to be passed to the function.
   :ivar kwargs: Keyword arguments to be passed to the function.


   .. py:attribute:: function
      :type: Any



   .. py:attribute:: args
      :type: tuple



   .. py:attribute:: kwargs
      :type: dict




.. py:class:: Job

   A job is a collection of tasks.

   :param name: Job name.
   :param tasks: List of tasks.

   .. py:attribute:: name
      :type: str



   .. py:attribute:: tasks
      :type: list[Task]



   .. py:method:: add_task(task: Task) -> None

      Add a task to the job.

      :param task: Task to add.


   .. py:method:: remove_task(index: int, task: Task = None) -> Task

      Remove a task from the job.

      :param index: Index of the task to remove.
      :param task: Task to remove.
      :param optional: Task to remove.

      :returns: *Removed task.*



.. py:class:: ETLPipeline(jobs: list[Job] = None)

   Bases: :py:obj:`abc.ABC`

   Abstract base class for ETL pipelines.

   .. py:property:: jobs
      :type: list[Job]

      List of jobs.

   .. py:method:: add_job(job: Job) -> None

      Add a job to the pipeline.

      :param job: Job to add.


   .. py:method:: remove_job(index: int, job: Job = None) -> Any

      Remove a job from the pipeline.

      :param index: Index of the job to remove.
      :param job: Job to remove.
      :param optional: Job to remove.

      :returns: *Removed job.*


   .. py:method:: produce_jobs(event: Any) -> Any
      :abstractmethod:

      Abstraction for producing tasks triggered by an event.
