name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  release:
    types: [published] #  If you want a workflow to run when stable and pre-releases publish, subscribe to published instead of released and prereleased.

jobs:
  pre-commit:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pre-commit hooks
        uses: pre-commit/action@v3.0.0

  build:
    needs: pre-commit

    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest, windows-latest]
        python-version: ["3.9", "3.10"]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install .
          python3 -m pip install -r requirements.txt

      - name: Install test suite
        run: |
          python3 -m pip install pytest pytest-cov

      - name: Build coverage file
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=dpypeline tests/ | tee pytest-coverage.txt

      - name: Pytest coverage comment
        id: coverage-comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.PYTEST_COVERAGE }}
          gistID: c20a3ec5262f14d970a462403316a547
          filename: pytest_coverage_report_main.json
          label: Coverage Report
          message: ${{ steps.coverage-comment.outputs.coverage }}
          color: ${{ steps.coverage-comment.outputs.color }}
          namedLogo: python

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags')

    strategy:
      matrix:
          os: [ubuntu-latest]
          python-version: ["3.10"]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install release dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install build --user

      - name: Generate distribution archives
        run: python3 -m build --sdist --wheel --outdir dist/

      #- name: Publish distrbution to TestPyPI
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    password: ${{ secrets.TEST_PYPI_API_TOKEN   }}
      #    repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
